<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jeff Caulfield</title><link href="http://jeffcaulfield.com/" rel="alternate"></link><link href="http://jeffcaulfield.com/feeds/publishing.atom.xml" rel="self"></link><id>http://jeffcaulfield.com/</id><updated>2016-08-27T09:30:00+01:00</updated><entry><title>The Pelican Brief</title><link href="http://jeffcaulfield.com/2016/the-pelican-brief.html" rel="alternate"></link><published>2016-08-27T09:30:00+01:00</published><author><name>Jeff Caulfield</name></author><id>tag:jeffcaulfield.com,2016-08-27:2016/the-pelican-brief.html</id><summary type="html">&lt;p&gt;Enough with trying to roll my own static site generator. Let&amp;#8217;s give &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; a&amp;nbsp;go.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican markdown
mkdir test-pelican
cd test-pelican
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I answered the site generation questions as&amp;nbsp;follows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; Where do you want to create your new web site? [.]
&amp;gt; What will be the title of this web site? Jeff Caulfield
&amp;gt; Who will be the author of this web site? Jeff Caulfield
&amp;gt; What will be the default language of this web site? [en]
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n)
&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://jeffcaulfield.com
&amp;gt; Do you want to enable article pagination? (Y/n)
&amp;gt; How many articles per page do you want? [10]
&amp;gt; What is your time zone? [Europe/Paris] Europe/London
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n)
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n)
&amp;gt; Do you want to upload your website using FTP? (y/N)
&amp;gt; Do you want to upload your website using SSH? (y/N)
&amp;gt; Do you want to upload your website using Dropbox? (y/N)
&amp;gt; Do you want to upload your website using S3? (y/N)
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N)
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) y
&amp;gt; Is this your personal page (username.github.io)? (y/N) y
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I then copied across content from my existing website and modified the metadata to use Title case, keeping all articles under the &lt;code&gt;content&lt;/code&gt; folder instead of nesting folders by year, and started the development&amp;nbsp;server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./develop_server.sh start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I made a number of changes to &lt;code&gt;pelicanconf.py&lt;/code&gt; to use my own theme, which I created by adapting the &lt;code&gt;simple&lt;/code&gt; theme, taking some hints from the &lt;code&gt;notmyidea&lt;/code&gt; theme. Getting it pushed to github.io was a bit of a pain. In the end I combined information from &lt;a href="https://fedoramagazine.org/make-github-pages-blog-with-pelican/"&gt;several&lt;/a&gt; &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;sources&lt;/a&gt; and decided on using a submodule to accomplish what I wanted. Not the cleanest approach, but it seems to&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;My procedure for updating this website involves running &lt;code&gt;make publish&lt;/code&gt; followed by &lt;code&gt;cd output &amp;amp;&amp;amp; git commit &amp;amp;&amp;amp; git push&lt;/code&gt;.&lt;/p&gt;</summary><category term="Pelican"></category></entry><entry><title>Gilding the Lily</title><link href="http://jeffcaulfield.com/2016/gilding-the-lily.html" rel="alternate"></link><published>2016-03-30T12:00:00+01:00</published><author><name>Jeff Caulfield</name></author><id>tag:jeffcaulfield.com,2016-03-30:2016/gilding-the-lily.html</id><summary type="html">&lt;p&gt;I tried a variety of static site generators on my way to rebuilding my personal website: &lt;a href="https://hexo.io/"&gt;hexo&lt;/a&gt;, &lt;a href="https://gohugo.io/"&gt;hugo&lt;/a&gt; and &lt;a href="https://sculpin.io/"&gt;sculpin&lt;/a&gt;, just to name a few. These all seem very complicated for what they purport to be, and definitely overkill for my&amp;nbsp;needs.&lt;/p&gt;
&lt;p&gt;Eventually, I stumbled across &lt;a href="http://boscoh.github.io/embellish/"&gt;embellish&lt;/a&gt;. It&amp;#8217;s written in &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;. It&amp;#8217;s very lightweight. It doesn&amp;#8217;t require a ton of files to get started. I was able to get something off the ground quickly without becoming bogged down in excessive detail. Very&amp;nbsp;nice.&lt;/p&gt;
&lt;p&gt;That said, I feel that there&amp;#8217;s some &amp;#8220;fat&amp;#8221; that could yet be trimmed. I  don&amp;#8217;t understand the need to use &lt;a href="http://haml.info/"&gt;Haml&lt;/a&gt; for templates when &lt;a href="http://jinja.pocoo.org/"&gt;Jinja&lt;/a&gt; is fine on its own. I&amp;#8217;m not using compiled assets (&lt;a href="http://coffeescript.org/"&gt;CoffeeScript&lt;/a&gt;, &lt;a href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; and so forth), although that&amp;#8217;s not to say that I might not want to do so later on. I&amp;#8217;d like the command-line to auto-detect &amp;#8220;site.yaml&amp;#8221; when it is present. I&amp;#8217;d also like to remove or at least rename the &amp;#8220;site.cache&amp;#8221;&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;At the same time, there are a few small but important features that are missing. A &lt;a href="http://www.sitemaps.org/"&gt;sitemap&lt;/a&gt; and a syndication feed in &lt;a href="http://atomenabled.org/"&gt;Atom&lt;/a&gt; and/or &lt;a href="http://www.whatisrss.com/"&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt;&lt;/a&gt; format should be a given. A &amp;#8220;draft&amp;#8221; mode for content in progress also seems essential. Pagination would be useful for large archive indexes. Finally, I&amp;#8217;d like a simple way to add site-specific extensions (Python scripts) to customise the render process, if at all&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;This all seems acheivable. I think I&amp;#8217;ll call it &lt;a href="https://github.com/jeffcaulfield/gild"&gt;gild&lt;/a&gt; as in &amp;#8220;gilding the lily&amp;#8221; in keeping with the theme of&amp;nbsp;embellishment.&lt;/p&gt;
&lt;p&gt;What could &lt;em&gt;possibly&lt;/em&gt; go&amp;nbsp;wrong?&lt;/p&gt;</summary></entry><entry><title>Hello world</title><link href="http://jeffcaulfield.com/2016/hello-world.html" rel="alternate"></link><published>2016-03-27T19:25:00+01:00</published><author><name>Jeff Caulfield</name></author><id>tag:jeffcaulfield.com,2016-03-27:2016/hello-world.html</id><summary type="html">&lt;p&gt;I built a new personal website using &lt;a href="http://boscoh.github.io/embellish/"&gt;embellish&lt;/a&gt; and &lt;a href="https://pages.github.com/"&gt;github.io&lt;/a&gt;. The following links proved useful in the&amp;nbsp;process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"&gt;Markdown&amp;nbsp;cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pitmairen/hamlish-jinja"&gt;Hamlish-jinja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://haml.info/docs/yardoc/file.REFERENCE.html"&gt;&lt;span class="caps"&gt;HAML&lt;/span&gt;&amp;nbsp;reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://minimalcss.com/"&gt;MinimalCSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://html5doctor.com/the-article-element/"&gt;The article&amp;nbsp;element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Still to&amp;nbsp;do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Article categories/tags and archive&amp;nbsp;page.&lt;/li&gt;
&lt;li&gt;Roll my own &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;-based static site&amp;nbsp;generator.&lt;/li&gt;
&lt;li&gt;Curriculum vitae&amp;nbsp;(maybe)&lt;/li&gt;
&lt;li&gt;Pet projects and links to interesting&amp;nbsp;stuff&lt;/li&gt;
&lt;/ul&gt;</summary></entry></feed>